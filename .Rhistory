d_1 <- c(d_1, fact)
index <- index + 1
}
d <- c(1, 2, 4, 6)
index <- 1
fact <- 1
d_1 <- c()
for (i in 1:d){
fact <- fact * i
d_1 <- c(d_1, fact)
index <- index + 1
}
print(d_1)
d <- c(1, 2, 4, 6)
index <- 1
fact <- 1
d_1 <- c()
for (i in d){
fact <- fact * i
d_1 <- c(d_1, fact)
index <- index + 1
}
print(d_1)
d <- c(1, 2, 4, 6)
index <- 1
fact <- 1
d_1 <- c()
for (i in 1:d[index <= length(d)]){
fact <- fact * i
print(i)
print(fact)
d_1 <- c(d_1, fact)
index <- index + 1
print(index)
}
print(d_1)
d <- c(1, 2, 4, 6)
index <- 1
fact <- 1
d_1 <- c()
for (i in 1:d){
fact <- fact * i
print(i)
print(fact)
d_1 <- c(d_1, fact)
index <- index + 1
print(index)
}
print(d_1)
d <- c(1, 2, 4, 6)
index <- 1
fact <- 1
d_1 <- c()
for (i in d){
fact <- fact * i
print(i)
print(fact)
d_1 <- c(d_1, fact)
index <- index + 1
print(index)
}
d <- c(1, 2, 4, 6)
fact <- 1
d_1 <- c()
for (i in d){
for (j in 1:i){
fact <- fact * j
d_1 <- c(d_1, fact)
}
print(d_1)
}
d <- c(1, 2, 4, 6)
fact <- 1
d_1 <- c()
for (i in d){
for (j in 1:i){
fact <- fact * j
d_1 <- c(d_1, fact)
}
}
print(d_1)
d <- c(1, 2, 4, 6)
fact <- 1
d_1 <- c()
for (i in d){
for (j in 1:i){
fact <- fact * j
d_1 <- c(d_1, fact)
}
}
print(i)
d <- c(1, 2, 4, 6)
fact <- 1
d_1 <- c()
for (i in d){
for (j in 1:i){
fact <- fact * j
d_1 <- c(d_1, fact)
}
print(i)
}
print(j)
d <- c(1, 2, 4, 6)
fact <- 1
d_1 <- c()
for (i in d){
for (j in 1:i){
fact <- fact * j
d_1 <- c(d_1, fact)
print(j)
}
}
d <- c(1, 2, 4, 6)
fact <- 1
d_1 <- c()
for (i in d){
for (j in 1:i){
fact <- fact * j
d_1 <- c(d_1, fact)
print(fact)
}
}
d <- c(1, 2, 4, 6)
fact <- 1
d_1 <- c()
for (i in d){
for (j in 1:i){
fact <- fact * j
d_1 <- c(d_1, fact)
}
print(fact)
}
d <- c(4)
fact <- 1
for (i in d){
fact <- fact * j
d_1 <- c(d_1, fact)
}
d <- c(4)
fact <- 1
for (i in d){
fact <- fact * j
}
print(fact)
d <- c(4)
fact <- 1
for (i in d){
fact <- fact * i
}
print(fact)
d <- 4
fact <- 1
for (i in d){
fact <- fact * i
}
print(fact)
d <- 4
fact <- 1
for (i in 1:d){
fact <- fact * i
}
print(fact)
#######--------------------------------------------------------------------
load.data <- function(path_val){
df2 <- read_csv(path_val)
return(df2)
}
new.function <- function(df2){
county <- df2$COUNTRIES
territories <- c()
for (i in county){
if (i == "Nigeria" | i == "Ghana"){
territories <- c(territories, "Anglophone")
} else {
territories <- c(territories, "Francophone")
}
}
return(territories)
}
add.dataframe <- function(df2, territories){
df3 <- mutate(df2, TERRITORY = territories)
return(df3)
}
path_val <- "C:/Users/TRAINER/Documents/data/Brewery_data.csv"
x <- load.data(path_val)
new_territory <- new.function(x)
add_df <- add.dataframe(x, new_territory)
print(new_territory)
print(add_df)
View(add_df)
install.packages('readr')
install.packages('readr')
install.packages('readr')
library('readr')
install.packages('readr')
install.packages('dplyr')
library('dplyr')
#QUESTION 1
unique_year <- unique(df$YEARS)
path <- "C:/Users/TRAINER/Documents/data/Brewery_data.csv"
df <- read_csv(path)
View(df)
#QUESTION 1
unique_year <- unique(df$YEARS)
print(unique_year)
install.packages('janitor')
library('readr')
library('janitor')
library('dplyr')
path <- "C:\Users\TRAINER\Documents\finnstats\FinData.csv"
df <- read_csv(path)
View(df)
#install.packages('janitor')
library('readr')
library('janitor')
library('dplyr')
path <- "C:\Users\TRAINER\Documents\finnstats\FinData.csv"
df <- read_csv(path)
path <- "C:/Users/TRAINER/Documents/finnstats/FinData.csv"
df <- read_csv(path)
View(df)
#install.packages('janitor')
library('readr')
library('janitor')
library('dplyr')
path <- "C:/Users/TRAINER/Documents/finnstats/FinData.csv"
df <- read_csv(path)
View(df)
path <- "C:/Users/TRAINER/Desktop/finnstats/FinData.csv"
df <- read_csv(path)
View(df)
clean_df <- clean_names(df)
col_names <- colnames(clean_df)
print(col_names)
clean_df %>% tabyl(employee_status, full_time) %>% adorn_totals()
for (i in col_names){
summ <- tabyl(clean_df, i)
print(summ)
}
for (i in col_names){
formatt <- clean_df %>% tabyl(i) %>%
adorn_pct_formatting(digits = 2, affix_sign = T)
print(formatt)
}
mtcars %>%
tabyl(am, cyl) %>%
adorn_percentages("col") %>%
adorn_pct_formatting()
cases <- data.frame(
region = c("East", "West"),
year = 2015,
recovered = c(125, 87),
died = c(13, 12)
)
cases %>%
adorn_percentages("col",,recovered:died) %>%
adorn_pct_formatting(,,,recovered:died)
for (i in col_names){
pct_format <- clean_df %>% tabyl(i, full_time) %>% adorn_totals()
print(pct_format)
}
for (i in col_names){
pct_format <- clean_df %>% tabyl(i, full_time) %>% adorn_totals()
print(pct_format)
}
for (i in col_names){
pct_format <- clean_df %>% tabyl(employee_status, full_time) %>% adorn_totals()
print(pct_format)
}
for (i in col_names){
pct_format <- clean_df %>% tabyl(i, full_time) %>% adorn_totals()
print(pct_format)
}
for (i in col_names){
pct_format <- clean_df %>% tabyl(i) %>% adorn_totals()
print(pct_format)
}
clean_df %>% tabyl(employee_status, full_time) %>% adorn_totals(where = c("row", "col"))
clean_df %>% tabyl(employee_status, full_time) %>% adorn_totals()
clean_df %>% tabyl(employee_status, full_time, subject)
for (i in col_names){
pct_format <- clean_df %>% tabyl(employee_status, full_time) %>% adorn_totals()
print(pct_format)
}
clean_df %>% tabyl(employee_status, full_time) %>% adorn_totals()
for (i in col_names){
pct_format <- clean_df %>% tabyl(employee_status, full_time,i) %>% adorn_totals()
print(pct_format)
}
clean_df %>% tabyl(employee_status, full_time) %>% adorn_totals()
new_clean <- clean_df%>% remove_empty(which = c("rows"))
print(new_clean)
new_clean <- clean_df %>% remove_empty(which = c("rows"))
clean_new <- new_clean %>% remove_empty(which = c("cols"))
View(clean_new)
new_clean <- clean_df %>% remove_empty(whic = c("rows"))
clean_new <- new_clean %>% remove_empty(whic = c("cols"))
View(clean_new)
clean_new %>% get_dupes(first_name)
clean_new %>% get_dupes(first_name)
clean_new %>% get_dupes(first_name, certification_10)
clean_new %>% get_dupes(first_name)
dat <- clean_new %>% get_dupes(first_name, certification_10)
View(dat)
filtered <- clean_new %>% filter(grepl('/', hire_date))
View(filtered)
filtered_two <- clean_new %>% filter(grepl('/', hire_date))
View(filtered_two)
filtered_one <- clean_new %>% filter(!grepl('/', hire_date))
View(filtered_one)
library('readr')
library('janitor')
library('dplyr')
path <- "C:/Users/TRAINER/Desktop/finnstats/FinData.csv"
df <- read_csv(path)
View(df)
clean_df <- clean_names(df)
col_names <- colnames(clean_df)
print(col_names)
View(clean_df)
new_clean <- clean_df %>% remove_empty(which = c("rows"))
clean_new <- new_clean %>% remove_empty(which = c("cols"))
View(clean_new)
clean_new %>% get_dupes(first_name)
dat <- clean_new %>% get_dupes(first_name, certification_10)
View(dat)
filtered_one <- clean_new %>% filter(!grepl('/', hire_date))
filtered_two <- clean_new %>% filter(grepl('/', hire_date))
for(i in colnames(clean_new)){
new_df$i[is.na(new_df$it)] <- 0
}
for(i in colnames(clean_new)){
clean_new$i[is.na(clean_new$i)] <- 0
}
for(i in colnames(clean_new)){
i[is.na(i)] <- 0
}
for(i in colnames(clean_new)){
i[is.na(i)] <- 0
}
View(clean_new)
d <- c(3, 5, 5, 7, 3, 8, 9, 10)
print(mode(d))
print(`mode<-`(d))
d <- c(3, 5, 5, 7, 3, 8, 9, 10)
print(mode(d))
print(`mode<-`(d))
print(Mode(d))
for (i in colnames(clean_new)){
k <- table(i)
print(k)
}
num_date <- as.numeric(filtered_one$hire_date)
clean_date <- excel_numeric_to_date(num_date)
print(clean_date)
clean_one <- filtered_one %>% mutate(hire_date = clean_date)
View(clean_one)
View(filtered_one)
View(filtered_two)
new_dt <- mdy(filtered_two$hire_date)
library(lubridate)
new_dt <- mdy(filtered_two$hire_date)
clean_two <- filtered_two %>% mutate(hire_date = mew_dt)
View(clean_two)
new_dt <- mdy(filtered_two$hire_date)
clean_two <- filtered_two %>% mutate(hire_date = new_dt)
View(clean_two)
new_df <- rbind(clean_one, clean_two)
View(new_df)
new_df$subject[is.na(new_df$subject)] <- mode(new_df$subject)
new_df$certification_9[is.na(new_df$certification_9)] <- mode(new_df$certification_9)
new_df$certification_10[is.na(new_df$certification_10)] <- mode(new_df$certification_10)
for (i in colnames(new_df)){
k <- sum(is.na(new_df[i]))
p <- paste(i, "=>", k, sep = " ")
print(p)
}
num_date <- as.numeric(filtered_one$hire_date)
clean_date <- excel_numeric_to_date(num_date)
print(clean_date)
clean_one <- filtered_one %>% mutate(hire_date = clean_date)
View(clean_one)
new_dt <- mdy(filtered_two$hire_date)
clean_two <- filtered_two %>% mutate(hire_date = new_dt)
new_df <- rbind(clean_one, clean_two)
for (i in colnames(new_df)){
k <- sum(is.na(new_df[i]))
p <- paste(i, "=>", k, sep = " ")
print(p)
}
func <- function(x){
for (i in x){
x[is.na(x)] <- 0
}
}
x <- func(new_df$subject)
View(new_df)
func <- function(x){
for (i in x){
x[which.is.na(x)] <- 0
}
}
x <- func(new_df$subject)
print(table(new_df$certification_9))
print(table(new_df$certification_10))
View(new_df)
new_df$subject[is.na(new_df$subject)] <- "English"
new_df$certification_9[is.na(new_df$certification_9)] <- mode(new_df$certification_9)
new_df$certification_10[is.na(new_df$certification_10)] <- mode(new_df$certification_10)
print(table(new_df$subject))
print(table(new_df$certification_9))
print(table(new_df$certification_10))
View(new_df)
new_df$subject[is.na(new_df$subject)] <- "English"
new_df$certification_9[is.na(new_df$certification_9)] <- "Physical ed"
new_df$certification_10[is.na(new_df$certification_10)] <- "Physics"
print(table(new_df$subject))
print(table(new_df$certification_9))
print(table(new_df$certification_10))
print(unique(new_df$subject))
new_df$subject[new_df$subject == "#REF"] <- "English"
View(new_df)
new_df$subject[new_df$subject == "#REF"] <- "English"
View(new_df)
clean_df <- clean_names(df)
col_names <- colnames(clean_df)
print(col_names)
View(clean_df)
new_clean <- clean_df %>% remove_empty(which = c("rows"))
clean_new <- new_clean %>% remove_empty(which = c("cols"))
View(clean_new)
clean_new %>% get_dupes(first_name)
dat <- clean_new %>% get_dupes(first_name, certification_10)
View(dat)
filtered_one <- clean_new %>% filter(!grepl('/', hire_date))
View(filtered_one)
filtered_two <- clean_new %>% filter(grepl('/', hire_date))
View(filtered_two)
num_date <- as.numeric(filtered_one$hire_date)
clean_date <- excel_numeric_to_date(num_date)
print(clean_date)
clean_one <- filtered_one %>% mutate(hire_date = clean_date)
View(clean_one)
new_dt <- mdy(filtered_two$hire_date)
clean_two <- filtered_two %>% mutate(hire_date = new_dt)
View(clean_two)
new_df <- rbind(clean_one, clean_two)
View(new_df)
for (i in colnames(new_df)){
k <- sum(is.na(new_df[i]))
p <- paste(i, "=>", k, sep = " ")
print(p)
}
new_df$subject[is.na(new_df$subject)] <- "English"
new_df$certification_9[is.na(new_df$certification_9)] <- "Physical ed"
new_df$certification_10[is.na(new_df$certification_10)] <- "Physics"
print(table(new_df$subject))
print(table(new_df$certification_9))
print(table(new_df$certification_10))
print(unique(new_df$subject))
new_df$subject[new_df$subject == "#REF"] <- "English"
View(new_df)
View(new_df)
new_df$subject[new_df$subject == "#REF"] <- "English"
View(new_df)
new_df$subject[new_df$subject == "#REF!"] <- "English"
View(new_df)
for (i in new_df$percent_allocated){
b <- substr(i, 1, nchar(i) - 1)
print(b)
}
new_df$subject[new_df$subject == "#N/A"] <- 0
for (i in new_df$percent_allocated){
b <- substr(i, 1, nchar(i) - 1)
print(b)
}
path <- "C:/Users/TRAINER/Desktop/finnstats/FinData.csv"
df <- read_csv(path)
View(df)
clean_df <- clean_names(df)
col_names <- colnames(clean_df)
print(col_names)
filtered_percent <- new_df %>% filter(!grepl('%', percent_allocated))
filtered_percent2 <- new_df %>% filter(!grepl('%', percent_allocated))
View(filtered_percent)
View(filtered_percent2)
filtered_percent <- new_df %>% filter(!grepl('%', percent_allocated))
filtered_percent2 <- new_df %>% filter(grepl('%', percent_allocated))
View(filtered_percent2)
new_col <- c()
for (i in filtered_percent2$percent_allocated){
b <- substr(i, 1, nchar(i) - 1)
c <- as.numeric(b)
mean_percent <- mean(c)
new_col <- c(new_col, mean_percent)
}
new_col <- c()
for (i in filtered_percent2$percent_allocated){
b <- substr(i, 1, nchar(i) - 1)
c <- as.numeric(b)
new_col <- c(new_col, c)
}
print(new_col)
filtered_percent2 <- filtered_percent2 %>% mutate(percent_allocated = new_col)
View(filtered_percent2)
filtered_percent2 <- filtered_percent2 %>% mutate(percent_allocated = new_col)
mean_percent2 <- mean(filtered_percent2$percent_allocated)
filtered_percent$percent_allocated[filtered_percent$percent_allocated == "#N/A"] <- mean_percent2
View(filtered_percent2)
View(filtered_percent)
new_percent <- rbind(filtered_percent, filtered_percent2)
View(new_percent)
